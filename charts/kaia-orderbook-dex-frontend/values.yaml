# Default values for kaia-orderbook-dex-frontend
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""
  imagePullSecrets: []

# Common labels for all resources
commonLabels:
  datadog-logs-enabled: "true"

replicaCount: 2

image:
  repository: kaia-orderbook-frontend
  pullPolicy: IfNotPresent
  tag: ""

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 80
  annotations: {}

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/upgrade: "$http_upgrade"
    nginx.ingress.kubernetes.io/connection: "$connection_upgrade"
  hosts:
    - host: dex.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: dex-tls
  #    hosts:
  #      - dex.example.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Environment configuration
environment:
  phase: "dev"
  apiUrl: "https://api-orderbook.dev.kaia.io/api/v1"
  wsUrl: "wss://api-orderbook.dev.kaia.io/ws"

serviceAccount:
  create: true
  annotations: {}
  name: ""

podSecurityContext: {}

securityContext: {}

nodeSelector: {}
tolerations: []
affinity: {}

env:
  - name: DD_AGENT_HOST
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: DD_SERVICE
    value: "kaia-orderbook-frontend"
  - name: DD_ENV
    value: "dev"  # This will be overridden by environment-specific values files

podDisruptionBudget:
  enabled: true
  minAvailable: 1

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

# Additional volumes and mounts
extraVolumes: []
extraVolumeMounts: []

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: 10s
