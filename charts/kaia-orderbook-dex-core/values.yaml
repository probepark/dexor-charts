# Default values for kaia-orderbook-dex-core
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Nitro Node Configuration
nitroNode:
  enabled: true
  replicaCount: 1

  image:
    repository: kaia-orderbook-dex-core
    pullPolicy: IfNotPresent
    tag: "dev"

  service:
    type: ClusterIP
    httpPort: 8547
    wsPort: 8548
    feedPort: 9642
    annotations: {}

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: rpc.example.com
        paths:
          - path: /
            pathType: Prefix
            port: http
    tls: []

  resources:
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 2000m
      memory: 4Gi

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    storageClass: ""
    annotations: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}

  env:
    - name: DD_AGENT_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: DD_SERVICE
      value: "kaia-orderbook-nitro-node"
    - name: DD_ENV
      value: "dev"  # This will be overridden by environment-specific values files

  # Command line arguments for nitro node
  args: []  # Most args are now dynamically generated based on configuration

  # Configuration file path (if using config file)
  configFile: "/config/sequencer_config.json"

  # Persistent chain path
  persistentChain: "/data"

  # WASM module root (will be auto-detected from image)
  wasmModuleRoot: ""

  # HTTP API configuration
  httpApi: "net,web3,eth,txpool,debug,arb"

  # Log level (0-5, where 3 is info)
  logLevel: 3

  # GraphQL configuration
  graphql:
    enabled: true

  # Profiling configuration
  pprof:
    enabled: true

  # Staker configuration
  staker:
    enabled: false
    dangerous:
      withoutBlockValidator: true
    parentChainWallet:
      privateKey: ""
    disableChallenge: true
    stakerInterval: "10s"
    makeAssertionInterval: "10s"
    strategy: "MakeNodes"
    useSmartContractWallet: true

  # Health check configuration
  healthCheck:
    enabled: true

# Validator Configuration
validator:
  enabled: false
  replicaCount: 1

  image:
    repository: kaia-orderbook-nitro-node-validator
    pullPolicy: IfNotPresent
    tag: ""

  service:
    type: ClusterIP
    port: 8549
    annotations: {}

  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 50Gi
    storageClass: ""

  nodeSelector: {}
  tolerations: []

  env:
    - name: DD_AGENT_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: DD_SERVICE
      value: "kaia-orderbook-validator"
    - name: DD_ENV
      value: "dev"  # This will be overridden by environment-specific values files

  # Default Pod Anti-Affinity to prevent multiple pods on the same node
  # This helps avoid PVC multi-attach errors for RWO volumes
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - kaia-orderbook-dex-core
            - key: app.kubernetes.io/component
              operator: In
              values:
              - nitro-node
          topologyKey: kubernetes.io/hostname

# Sequencer Configuration
sequencer:
  enabled: true

  # Sequencer coordinator URL
  coordinatorUrl: "http://0.0.0.0:8547"

  # Sequencer queue configuration
  queueSize: 4096
  maxBlockSpeed: "250ms"

  # Redis configuration for sequencer coordination
  redis:
    enabled: false  # Set to true for multi-sequencer setup
    url: "redis://redis-service:6379"

  # Batch poster configuration
  batchPoster:
    enabled: false  # Will be enabled after initial deployment
    maxDelay: "30s"
    compressionLevel: "well"
    parentChainWallet:
      privateKey: "49552d0ea850ae92d477b2479315ddce17692bb05ce3f8fd4ca9109cca134cb1"

  # Data availability configuration
  dataAvailability:
    enabled: false
    mode: "onchain"  # onchain, anytrust, or celestia

  gasCap: "150000000"
  txFeeCap: "10"

# Environment Configuration
environment:
  phase: "dev"

  # Parent chain configuration
  parentChain:
    chainId: 1001  # Kaia Kairos testnet
    rpcUrl: "https://archive-en-kairos.node.kaia.io"
    wsUrl: "wss://archive-en-kairos.node.kaia.io/ws"

  # Child chain configuration
  childChain:
    chainId: 412346
    chainName: "Kaia Orderbook DEX"

  # Contract addresses (to be set after deployment)
  contracts:
    rollup: ""
    sequencerInbox: ""
    bridge: ""
    inbox: ""

  # Chain configuration JSON (to be set after deployment)
  chainConfig: ""

  # Chain info JSON (to be set after deployment)
  chainInfo: ""

  # Deployment info JSON (to be set after deployment)
  deploymentInfo: ""

# Configuration Management
config:
  # Generate sequencer config dynamically from values
  generateSequencerConfig: true

  # Configuration files to be stored in ConfigMap
  # This allows injecting multiple config files
  files: {}
    # Example structure:
    # l2_chain_info.json: |
    #   {
    #     "chain-id": 412346,
    #     "parent-chain-id": 1001,
    #     "chain-config": {...}
    #   }
    # deployment.json: |
    #   {
    #     "rollup": "0x...",
    #     "validators": [...],
    #     "batch-poster": "0x..."
    #   }
    # custom-config.json: |
    #   {
    #     "custom": "values"
    #   }

# Nitro Configuration
nitroConfig:
  # Archive mode for full node
  archiveMode: false

  # Orderbook specific settings
  orderbook:
    enabled: false
    gasLimit: 500000000

  # Feed configuration
  feed:
    output:
      enable: false
      port: 9642

  # Dangerous flags (use with caution)
  dangerous:
    noL1Listener: false

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: 10s

  prometheus:
    port: 6060
    path: /metrics

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Security Context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Container Security Context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false  # Nitro needs to write to disk
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false  # Single replica by default
  minAvailable: 1

# Timeboost/MEV Configuration
timeboost:
  enabled: false
  auctioneer:
    enabled: false
    redisUrl: "redis://redis-service:6379"
  expressLaneController:
    enabled: false
