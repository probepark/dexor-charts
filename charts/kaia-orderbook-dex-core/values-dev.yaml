global:
  imageRegistry: "asia-northeast3-docker.pkg.dev/orderbook-dex-dev/dev-docker-registry"
nameOverride: dev-kaia-orderbook-dex-core
fullnameOverride: dev-kaia-orderbook-dex-core
nodeMode: "full"
nitroNode:
  enabled: true
  image:
    repository: kaia-orderbook-dex-core
    tag: "dev"
    pullPolicy: Always
  resources:
    limits:
      cpu: 4000m
      memory: 16Gi
    requests:
      cpu: 2000m
      memory: 8Gi
  persistence:
    size: 200Gi # Increased for sequencer mode
  # Node selector and tolerations for sequencer pool
  nodeSelector:
    workload: "arbitrum-sequencer"
    node-type: "sequencer"
  tolerations:
    - key: "workload"
      operator: "Equal"
      value: "sequencer"
      effect: "NoSchedule"
  args: []
  configFile: "/config/sequencer_config.json"
  # Persistent chain path
  persistentChain: "/data"
  # WASM module root from deployment
  wasmModuleRoot: "0x184884e1eb9fefdc158f6c8ac912bb183bf3cf83f0090317e0bc4ac5860baa39"
  logLevel: 3
  # Enable health check for sequencer mode
  healthCheck:
    enabled: true
  # Staker configuration for full mode
  staker:
    enabled: true
    parentChainWallet:
      privateKey: "b8d4f7607e013d0132424a09645c31c1ac16857ecfce060f7d4d904979e421e0"
    strategy: "MakeNodes"
    stakerInterval: "30s"
    makeAssertionInterval: "60s"
    confirmationBlocks: 12
    enableFastConfirmation: false
    disableChallenge: false
    dangerous:
      withoutBlockValidator: true
    dataPoster:
      maxMempoolTransactions: 30
    bold:
      enabled: true
      strategy: "MakeNodes"
      rpcBlockNumber: "latest"
      stateProvider:
        checkBatchFinality: false
      parentChainBlockTime: "1s"
      maxGetLogBlocks: 100
      assertionScanningInterval: "60s"
      assertionPostingInterval: "2m"
    parentChainReader:
      useFinality: false
    ensureRollupDeployment: false
  # Inbox reader configuration
  inboxReader:
    readMode: "latest"
  # Ensure rollup deployment is disabled
  ensureRollupDeployment: false
  # Enable dangerous flags for full mode
  dangerousDisableBlobReader: true
  # Validation configuration
  validation:
    blockValidator:
      enable: false
    wasm:
      rootPath: "/data/wasm"
  # Execution configuration
  execution:
    stylusTarget:
      amd64: "x86_64-linux-unknown"
  # Service configuration
  service:
    httpPort: 8547
    wsPort: 8548
  # HTTP API configuration for full mode
  httpApi: "net,web3,eth,debug,arb,arbinternal"
  # Enable GraphQL
  graphql:
    enabled: true
  # Enable pprof for performance profiling
  pprof:
    enabled: true
  # Set replica count
  replicaCount: 1
  env:
    - name: DD_AGENT_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: DD_SERVICE
      value: "kaia-orderbook-dex-core"
    - name: DD_ENV
      value: "dev"
  # Enable ingress for L2 RPC access
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "100m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      cert-manager.io/cluster-issuer: "letsencrypt-dev"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # WebSocket support
      nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
      nginx.ingress.kubernetes.io/proxy-set-headers: |
        Upgrade $http_upgrade;
        Connection "upgrade";
    hosts:
      - host: l2-rpc-dev.dexor.trade
        paths:
          - path: /
            pathType: Prefix
            port: http
      - host: l2-ws-dev.dexor.trade
        paths:
          - path: /
            pathType: Prefix
            port: ws
    tls:
      - secretName: l2-rpc-dev-tls
        hosts:
          - l2-rpc-dev.dexor.trade
      - secretName: l2-ws-dev-tls
        hosts:
          - l2-ws-dev.dexor.trade
# Development environment configuration
environment:
  phase: "dev"
  parentChain:
    chainId: 1001 # Kaia Kairos testnet
  # Child chain configuration from deployment
  childChain:
    chainId: 412346
    chainName: "Kaia Orderbook DEX"
  # Contract addresses from deployment (2025-06-19)
  contracts:
    rollup: "0x32B1cCbAa1f5455747e9baf2b4Ed1c78a1fd13F5"
    sequencerInbox: "0xaAc4542baA04633b822C27215Dd81446C1bbb2E7"
    bridge: "0x3bd33c6ef33DFE1c388A830c95a1a36B0172aA48"
    inbox: "0xEd314848B0E7fa60b5F4ba4Ba281C6a335BDFFD6"
    outbox: "0xa7823c0915D71190dB90cd9323D39a02b0c23F61" # From deployment output
    rollupEventInbox: "0x7FbCc8caCA161CD9541D7700f55D21D164E58548" # From deployment output
    challengeManager: "0x64430eD79366B010aA2D56559722095B677059FC" # From deployment output
    adminProxy: "0xbCE3833f82FbfAf93685Acb243e6ff61e5DF528D" # From deployment output
    upgradeExecutor: "0x4988EED20bF9b3826fB96334EB50c120dC26eEB2" # From l2_chain_info.json
    validatorWalletCreator: "0x3cF6eF4eB7fFEc116216d761114ffe62c3370A2f" # From deployment output
    stakeToken: "0x1D5EAC6a5334BE258F25B1BAcD4c542E1D1882bF" # From l2_chain_info.json (WETH)
# Enable monitoring in dev for debugging
monitoring:
  enabled: true
  prometheus:
    port: 6060
# Enable sequencer features
sequencer:
  enabled: true
  coordinatorUrl: "http://0.0.0.0:8547"
  queueSize: 4096 # Queue size for full mode
  maxBlockSpeed: "250ms" # Block speed for full mode
  maxRevertGasReject: 0
  gasCap: "150000000"
  txFeeCap: 10
  delayedSequencer:
    enabled: true
  dangerousNoSequencerCoordinator: true # Required for full mode without redis
  redis:
    enabled: false # Single sequencer in dev
  batchPoster:
    enabled: true # Enable batch posting with private key
    maxDelay: "10s" # Increased from 30s to avoid conflicts with reorg-resistance-margin
    compressionLevel: 6 # 0-9, where 6 is a good balance
    parentChainWallet:
      privateKey: "49552d0ea850ae92d477b2479315ddce17692bb05ce3f8fd4ca9109cca134cb1"
    dataPoster:
      maxMempoolTransactions: 20
    dataAvailability:
      enable: false # Use onchain data availability for dev
# Nitro specific configuration
nitroConfig:
  feed:
    output:
      enable: true
      port: 9642
# Configuration files for sequencer mode
config:
  generateSequencerConfig: true
  files:
    l2_chain_config.json: |
      {
        "chainId": 412346,
        "homesteadBlock": 0,
        "daoForkSupport": true,
        "eip150Block": 0,
        "eip150Hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "eip155Block": 0,
        "eip158Block": 0,
        "byzantiumBlock": 0,
        "constantinopleBlock": 0,
        "petersburgBlock": 0,
        "istanbulBlock": 0,
        "muirGlacierBlock": 0,
        "berlinBlock": 0,
        "londonBlock": 0,
        "clique": {
          "period": 0,
          "epoch": 0
        },
        "arbitrum": {
          "EnableArbOS": true,
          "AllowDebugPrecompiles": true,
          "DataAvailabilityCommittee": false,
          "InitialArbOSVersion": 32,
          "InitialChainOwner": "0xf07ade7aa7dd067b6e9426a38bd538c0025bc784",
          "GenesisBlockNum": 0
        }
      }
    l2_chain_info.json: |
      [
        {
          "chain-name": "arb-dev-test",
          "parent-chain-id": 1001,
          "parent-chain-is-arbitrum": false,
          "sequencer-url": "",
          "secondary-forwarding-target": "",
          "feed-url": "",
          "secondary-feed-url": "",
          "das-index-url": "",
          "has-genesis-state": false,
          "chain-config": {
            "chainId": 412346,
            "homesteadBlock": 0,
            "daoForkSupport": true,
            "eip150Block": 0,
            "eip150Hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "eip155Block": 0,
            "eip158Block": 0,
            "byzantiumBlock": 0,
            "constantinopleBlock": 0,
            "petersburgBlock": 0,
            "istanbulBlock": 0,
            "muirGlacierBlock": 0,
            "berlinBlock": 0,
            "londonBlock": 0,
            "clique": {
              "period": 0,
              "epoch": 0
            },
            "arbitrum": {
              "EnableArbOS": true,
              "AllowDebugPrecompiles": true,
              "DataAvailabilityCommittee": false,
              "InitialArbOSVersion": 32,
              "InitialChainOwner": "0xf07ade7aa7dd067b6e9426a38bd538c0025bc784",
              "GenesisBlockNum": 0
            }
          },
          "rollup": {
            "bridge": "0x3bd33c6ef33DFE1c388A830c95a1a36B0172aA48",
            "inbox": "0xEd314848B0E7fa60b5F4ba4Ba281C6a335BDFFD6",
            "sequencer-inbox": "0xaAc4542baA04633b822C27215Dd81446C1bbb2E7",
            "deployed-at": 193510055,
            "rollup": "0x32B1cCbAa1f5455747e9baf2b4Ed1c78a1fd13F5",
            "native-token": "0x0000000000000000000000000000000000000000",
            "upgrade-executor": "0x4988EED20bF9b3826fB96334EB50c120dC26eEB2",
            "validator-wallet-creator": "0x3cF6eF4eB7fFEc116216d761114ffe62c3370A2f",
            "stake-token": "0x1D5EAC6a5334BE258F25B1BAcD4c542E1D1882bF"
          }
        }
      ]
    deployment.json: |
      {
        "bridge": "0x3bd33c6ef33DFE1c388A830c95a1a36B0172aA48",
        "inbox": "0xEd314848B0E7fa60b5F4ba4Ba281C6a335BDFFD6",
        "sequencer-inbox": "0xaAc4542baA04633b822C27215Dd81446C1bbb2E7",
        "deployed-at": 193510055,
        "rollup": "0x32B1cCbAa1f5455747e9baf2b4Ed1c78a1fd13F5",
        "native-token": "0x0000000000000000000000000000000000000000",
        "upgrade-executor": "0x4988EED20bF9b3826fB96334EB50c120dC26eEB2",
        "validator-wallet-creator": "0x3cF6eF4eB7fFEc116216d761114ffe62c3370A2f",
        "stake-token": "0x1D5EAC6a5334BE258F25B1BAcD4c542E1D1882bF"
      }
debugSidecar:
  enabled: true
